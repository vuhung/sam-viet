<UserControl x:Class="WorldMap.Workspace_demo1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
    xmlns:local="clr-namespace:WorldMap"
    xmlns:m="clr-namespace:Microsoft.Maps.MapControl;assembly=Microsoft.Maps.MapControl"
    mc:Ignorable="d" d:DesignHeight="768" d:DesignWidth="1024">

    <UserControl.Resources>
        <SolidColorBrush x:Key="PrimaryColor-Brush" Color="#FF21CBBD"/>
        <SolidColorBrush x:Key="NormalColor-Brush" Color="#FF7C7C7C"/>
        <Style x:Key="MainMenu-RadioButton" TargetType="RadioButton">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Padding" Value="4,1,0,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid Background="#00000000" Cursor="Hand">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="32" Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="normal" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="32" Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="selected" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                    <VisualState x:Name="InvalidFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TextBlock x:Name="normal" TextWrapping="Wrap" Text="{TemplateBinding Content}" d:LayoutOverrides="Width, Height" FontFamily="Fonts/Fonts.zip#Segoe" FontSize="26" Foreground="{StaticResource NormalColor-Brush}" VerticalAlignment="Center"/>
                            <TextBlock x:Name="selected" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="Fonts/Fonts.zip#Segoe" FontSize="26" Foreground="{StaticResource PrimaryColor-Brush}" d:LayoutOverrides="Width, Height" Opacity="0" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid x:Name="MainContent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <ic:GoToStateAction StateName="ClockActive"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <VisualStateManager.CustomVisualStateManager>
            <ic:ExtendedVisualStateManager/>
        </VisualStateManager.CustomVisualStateManager>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ArrowPosition">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.4">
                        <VisualTransition.GeneratedEasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="ClockActive">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewsBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CountdownActive">
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="105" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="arrowMenu" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ProjectBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewsContent">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="TimerActive">
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="211" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="arrowMenu" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="timerBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewsContent">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="WorldActive">
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="211" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="arrowMenu" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="timerBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewsContent">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Border x:Name="BackgroundBorder" Background="White">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="0" Opacity="0.88"/>
            </Border.Effect>
            <Grid x:Name="TimeContent">
                <StackPanel x:Name="Menu" Height="36" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <RadioButton x:Name="news" Content="News" Style="{StaticResource MainMenu-RadioButton}" d:LayoutOverrides="Height" IsChecked="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <ic:GoToStateAction StateName="ClockActive"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton x:Name="project" Content="Project" Style="{StaticResource MainMenu-RadioButton}" d:LayoutOverrides="Height" Margin="12,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <ic:GoToStateAction StateName="CountdownActive"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton x:Name="statistic" Content="Statistics" Style="{StaticResource MainMenu-RadioButton}" d:LayoutOverrides="Height">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <ic:GoToStateAction StateName="TimerActive"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton x:Name="World" Content="World" Style="{StaticResource MainMenu-RadioButton}" Margin="12,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <ic:GoToStateAction StateName="WorldActive"/>                                
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                </StackPanel>
                <Grid x:Name="Timers" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,60,0,0">
                    <Border x:Name="TimeBackground" BorderThickness="1" BorderBrush="#FFD9D9D9" CornerRadius="6" Background="Black">                        
                    </Border>
                    <Border x:Name="NewsBorder" BorderThickness="1" CornerRadius="6">
                        <StackPanel x:Name="NewsContent" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <local:FeedViewer x:Name="MyFeedViewer"></local:FeedViewer>
                        </StackPanel>
                    </Border>
                    <Border x:Name="ProjectBorder" BorderThickness="1" CornerRadius="6" Visibility="Collapsed">
                        <Grid x:Name="countdownContent">
                            <m:Map CredentialsProvider="AnDFcb6V80_dRKOObV5Q-K0ACvlPNjpllC76dk3Trd7tG1Gjlau_T14711TdnLSe" 
                                   x:Name="MyMap" AllowDrop="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                   ScaleVisibility="Collapsed" NavigationVisibility="Visible"
                                   Center="16,111" ZoomLevel="6"
                                   >         
                                <m:Pushpin Location="22,105" MouseLeftButtonDown="Pushpin_MouseLeftButtonDown"></m:Pushpin>
                                <m:Pushpin Location="18,105.5" Background="Aqua" MouseLeftButtonDown="Pushpin_MouseLeftButtonDown"></m:Pushpin>
                                <m:Pushpin Location="17,107" Background="Black" MouseLeftButtonDown="Pushpin_MouseLeftButtonDown"></m:Pushpin>
                                <m:Pushpin Location="10,106" Background="Bisque" MouseLeftButtonDown="Pushpin_MouseLeftButtonDown"></m:Pushpin>
                            </m:Map>
                            <Border HorizontalAlignment="Right" Background="Black" VerticalAlignment="Stretch" Width="800" Margin="10,60" CornerRadius="10">
                                <Border.Effect>
                                    <DropShadowEffect></DropShadowEffect>
                                </Border.Effect>
                                <Image Stretch="Fill" Source="Image/Project.png"/>
                            </Border>
                        </Grid>
                    </Border>
                    <Border x:Name="timerBorder" BorderThickness="1" CornerRadius="6" Visibility="Collapsed">                        
                        <Grid x:Name="timerContent" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="114" Width="287">                            
                        </Grid>
                    </Border>
                </Grid>
                <Path x:Name="arrowMenu" Data="M202,154 L228.5,180 L176.5,180 z" Fill="Black" HorizontalAlignment="left" Height="27" Margin="15,35,0,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Width="53" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <CompositeTransform/>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Border>

    </Grid>

</UserControl>
